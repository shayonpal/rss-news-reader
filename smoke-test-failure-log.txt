Run echo "Running critical path tests..."
  echo "Running critical path tests..."
  # First run environment smoke test to validate setup
  if [ -f "src/__tests__/unit/test-setup.smoke.test.ts" ]; then
    echo "Running environment smoke test..."
    npx vitest run --no-coverage \
      src/__tests__/unit/test-setup.smoke.test.ts \
      --reporter=verbose || echo "Smoke test not found, skipping..."
  fi

  # Use the isolation script for critical tests to prevent cross-test interference
  echo "Running critical tests with proper isolation..."
  chmod +x scripts/run-critical-tests.sh
  ./scripts/run-critical-tests.sh
  echo "Critical path tests passed ✅"
  shell: /usr/bin/bash -e {0}
  env:
    NODE_VERSION: 20
    PNPM_VERSION: 8
    CI: true
    FORCE_COLOR: 1
Running critical path tests...
Running environment smoke test...
The CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.

 RUN  v2.1.9 /home/runner/work/rss-news-reader/rss-news-reader

 ✓ src/__tests__/unit/test-setup.smoke.test.ts > Test Environment Smoke Test > should have IndexedDB available
 ✓ src/__tests__/unit/test-setup.smoke.test.ts > Test Environment Smoke Test > should have localStorage available
 ✓ src/__tests__/unit/test-setup.smoke.test.ts > Test Environment Smoke Test > should have sessionStorage available
 ✓ src/__tests__/unit/test-setup.smoke.test.ts > Test Environment Smoke Test > should have fetch available
 ✓ src/__tests__/unit/test-setup.smoke.test.ts > Test Environment Smoke Test > should have IntersectionObserver available
 ✓ src/__tests__/unit/test-setup.smoke.test.ts > Test Environment Smoke Test > should have ResizeObserver available
 ✓ src/__tests__/unit/test-setup.smoke.test.ts > Test Environment Smoke Test > should have matchMedia available
 ✓ src/__tests__/unit/test-setup.smoke.test.ts > Test Environment Smoke Test > should be able to use storage APIs
 ✓ src/__tests__/unit/test-setup.smoke.test.ts > Test Environment Smoke Test > should be able to clear storage

 Test Files  1 passed (1)
      Tests  9 passed (9)
   Start at  21:26:30
   Duration  832ms (transform 46ms, setup 45ms, collect 13ms, tests 7ms, environment 374ms, prepare 55ms)

Running critical tests with proper isolation...
Running critical path tests with isolation...
1. Running database lifecycle tests...
The CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.

 RUN  v2.1.9 /home/runner/work/rss-news-reader/rss-news-reader

 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 1: Database Open/Close Behavior (6 tests) > 1.1 should open database successfully
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 1: Database Open/Close Behavior (6 tests) > 1.2 should handle opening already-open database
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 1: Database Open/Close Behavior (6 tests) > 1.3 should close and reopen database (close → open sequence)
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 1: Database Open/Close Behavior (6 tests) > 1.4 should handle simultaneous close calls without errors
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 1: Database Open/Close Behavior (6 tests) > 1.5 should perform read/write operations after open-close-reopen cycle
stderr | src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 2: Deletion Edge Cases (6 tests) > 2.2 should handle deleting database that is still open
Database version changed by another tab. Reloading...
Another connection wants to delete database 'test_db_delete_open_test_1754947593158_bqn2ka'. Closing db now to resume the delete request.

 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 1: Database Open/Close Behavior (6 tests) > 1.6 should handle multiple database instances in parallel
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 2: Deletion Edge Cases (6 tests) > 2.1 should close and delete database successfully (close → delete sequence)
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 2: Deletion Edge Cases (6 tests) > 2.2 should handle deleting database that is still open
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 2: Deletion Edge Cases (6 tests) > 2.3 should handle close → delete → open sequence creating new clean database
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 2: Deletion Edge Cases (6 tests) > 2.4 should handle deleting non-existent database
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 2: Deletion Edge Cases (6 tests) > 2.5 should handle rapid close → delete sequence
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 2: Deletion Edge Cases (6 tests) > 2.6 should handle delete with simulated slow file removal
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 3: Concurrency/Race Conditions (8 tests) > 3.1 should handle concurrent close and delete from separate async routines
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 3: Concurrency/Race Conditions (8 tests) > 3.2 should handle multiple parallel open/close/delete operations
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 3: Concurrency/Race Conditions (8 tests) > 3.3 should handle two connections to same database with concurrent cleanup
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 3: Concurrency/Race Conditions (8 tests) > 3.4 should handle database deletion while transaction is pending
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 3: Concurrency/Race Conditions (8 tests) > 3.5 should handle rapid open/close cycles under load
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 3: Concurrency/Race Conditions (8 tests) > 3.6 should handle interleaved open/close operations from multiple databases
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 3: Concurrency/Race Conditions (8 tests) > 3.7 should handle database recreation race conditions
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 3: Concurrency/Race Conditions (8 tests) > 3.8 should prevent DatabaseClosedError during concurrent operations
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 4: Resource Management (5 tests) > 4.1 should handle open/close in tight loop without resource leaks
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 4: Resource Management (5 tests) > 4.2 should handle databases with increasing complexity
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 4: Resource Management (5 tests) > 4.3 should verify no lingering IndexedDB connections after cleanup
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 4: Resource Management (5 tests) > 4.4 should handle repeated create/drop of unique databases
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 4: Resource Management (5 tests) > 4.5 should handle resource cleanup after operation timeout/abort
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 5: Multi-Test Isolation (5 tests) > 5.1 should use unique database names per test preventing cross-test pollution
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 5: Multi-Test Isolation (5 tests) > 5.2 should verify database no longer exists after cleanup
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 5: Multi-Test Isolation (5 tests) > 5.3 should run parallel tests with different DB names without interference
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 5: Multi-Test Isolation (5 tests) > 5.4 should handle same DB name with explicit close+delete between runs
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Category 5: Multi-Test Isolation (5 tests) > 5.5 should verify data stores don't auto-initialize in test environment
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Integration Tests: Complete Lifecycle Scenarios > should handle complete application startup/shutdown cycle
 ✓ src/lib/stores/__tests__/database-lifecycle.test.ts > RR-112: Database Lifecycle Management and Race Condition Tests > Integration Tests: Complete Lifecycle Scenarios > should handle database corruption recovery scenario

 Test Files  1 passed (1)
      Tests  32 passed (32)
   Start at  21:26:32
   Duration  1.41s (transform 135ms, setup 44ms, collect 161ms, tests 429ms, environment 365ms, prepare 59ms)

2. Running data store tests...
The CJS build of Vite's Node API is deprecated. See https://vite.dev/guide/troubleshooting.html#vite-cjs-node-api-deprecated for more details.

 RUN  v2.1.9 /home/runner/work/rss-news-reader/rss-news-reader

stdout | src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Article Store Tests > should load articles correctly
Initializing database...

stdout | src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Article Store Tests > should filter articles by feed
Initialized default user preferences

stdout | src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Article Store Tests > should filter articles by feed
📊 Database query - preservedArticles: 0, readStatusFilter: unread

stderr | src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Article Store Tests > should filter articles by feed
Database validation failed: [DexieError [DatabaseClosedError]: DatabaseClosedError Database has been closed] {
  inner: [DexieError [DatabaseClosedError]: Database has been closed] {
    inner: null
  }
}

stdout | src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests
📊 Database query - preservedArticles: 0, readStatusFilter: unread

stderr | src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests
Database validation failed: TypeError: Cannot read properties of undefined (reading 'filter')
    at Function.validateDatabaseIntegrity (/home/runner/work/rss-news-reader/rss-news-reader/src/lib/db/migrations.ts:257:10)
    at runNextTicks (node:internal/process/task_queues:60:5)
    at processImmediate (node:internal/timers:454:9)
    at Object.initializeDatabase (/home/runner/work/rss-news-reader/rss-news-reader/src/lib/stores/data-store.ts:86:13)
    at /home/runner/work/rss-news-reader/rss-news-reader/src/lib/stores/__tests__/data-stores.test.ts:185:22
    at file:///home/runner/work/rss-news-reader/rss-news-reader/node_modules/@vitest/runner/dist/index.js:533:5
    at runTest (file:///home/runner/work/rss-news-reader/rss-news-reader/node_modules/@vitest/runner/dist/index.js:1056:11)
    at async Promise.all (index 0)
    at runSuite (file:///home/runner/work/rss-news-reader/rss-news-reader/node_modules/@vitest/runner/dist/index.js:1191:13)
    at async Promise.all (index 0)
Failed to initialize database: TypeError: __vite_ssr_import_2__.db.getVersion is not a function
    at Object.initializeDatabase (/home/runner/work/rss-news-reader/rss-news-reader/src/lib/stores/data-store.ts:88:36)
    at runNextTicks (node:internal/process/task_queues:60:5)
    at processImmediate (node:internal/timers:454:9)
    at /home/runner/work/rss-news-reader/rss-news-reader/src/lib/stores/__tests__/data-stores.test.ts:185:22
    at file:///home/runner/work/rss-news-reader/rss-news-reader/node_modules/@vitest/runner/dist/index.js:533:5
    at runTest (file:///home/runner/work/rss-news-reader/rss-news-reader/node_modules/@vitest/runner/dist/index.js:1056:11)
    at async Promise.all (index 0)
    at runSuite (file:///home/runner/work/rss-news-reader/rss-news-reader/node_modules/@vitest/runner/dist/index.js:1191:13)
    at async Promise.all (index 0)
    at runSuite (file:///home/runner/work/rss-news-reader/rss-news-reader/node_modules/@vitest/runner/dist/index.js:1191:13)
Attempting to recover from database corruption...
Failed to recover from database corruption: TypeError: __vite_ssr_import_0__.db.recordCorruption is not a function
    at Function.handleCorruptedDatabase (/home/runner/work/rss-news-reader/rss-news-reader/src/lib/db/migrations.ts:126:16)
    at Object.initializeDatabase (/home/runner/work/rss-news-reader/rss-news-reader/src/lib/stores/data-store.ts:113:54)
    at runNextTicks (node:internal/process/task_queues:60:5)
    at processImmediate (node:internal/timers:454:9)
    at /home/runner/work/rss-news-reader/rss-news-reader/src/lib/stores/__tests__/data-stores.test.ts:185:22
    at file:///home/runner/work/rss-news-reader/rss-news-reader/node_modules/@vitest/runner/dist/index.js:533:5
    at runTest (file:///home/runner/work/rss-news-reader/rss-news-reader/node_modules/@vitest/runner/dist/index.js:1056:11)
    at async Promise.all (index 0)
    at runSuite (file:///home/runner/work/rss-news-reader/rss-news-reader/node_modules/@vitest/runner/dist/index.js:1191:13)
    at async Promise.all (index 0)

 × src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Database Initialization > should initialize database with correct schema
   → expected false to be true // Object.is equality
 ✓ src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Database Initialization > should create all required tables
 ✓ src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Database Initialization > should handle database corruption gracefully
 × src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Article Store Tests > should load articles correctly
   → expected +0 to be 1 // Object.is equality
 × src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Article Store Tests > should filter articles by feed
   → expected +0 to be 1 // Object.is equality
 × src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Article Store Tests > should mark article as read
   → DatabaseClosedError Database has been closed

⎯⎯⎯⎯⎯⎯⎯ Failed Tests 4 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Database Initialization > should initialize database with correct schema
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/lib/stores/__tests__/data-stores.test.ts:187:22
    185|       const result = await dataStore.initializeDatabase();
    186|
    187|       expect(result).toBe(true);
       |                      ^
    188|       expect(dataStore.dbStatus.isInitialized).toBe(true);
    189|       expect(dataStore.dbStatus.isHealthy).toBe(true);

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/4]⎯

 FAIL  src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Article Store Tests > should load articles correctly
AssertionError: expected +0 to be 1 // Object.is equality

- Expected
+ Received

- 1
+ 0

 ❯ src/lib/stores/__tests__/data-stores.test.ts:228:42
    226|       await articleStore.loadArticles();
    227|
    228|       expect(articleStore.articles.size).toBe(1);
       |                                          ^
    229|       expect(articleStore.articles.get("test-article-1")).toBeDefined(…
    230|       expect(articleStore.loadingArticles).toBe(false);

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/4]⎯

 FAIL  src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Article Store Tests > should filter articles by feed
AssertionError: expected +0 to be 1 // Object.is equality

- Expected
+ Received

- 1
+ 0

 ❯ src/lib/stores/__tests__/data-stores.test.ts:238:42
    236|       await articleStore.loadArticles("test-feed-1");
    237|
    238|       expect(articleStore.articles.size).toBe(1);
       |                                          ^
    239|       expect(articleStore.selectedFeedId).toBe("test-feed-1");
    240|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/4]⎯

 FAIL  src/lib/stores/__tests__/data-stores.test.ts > Data Stores Integration Tests > Article Store Tests > should mark article as read
DatabaseClosedError: DatabaseClosedError Database has been closed
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { inner: { name: 'DatabaseClosedError', message: 'Database has been closed', inner: null, constructor: 'Function<DexieError>', toString: 'Function<toString>' } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/4]⎯

 Test Files  1 failed (1)
      Tests  4 failed | 2 passed (24)
   Start at  21:26:34
   Duration  1.13s (transform 213ms, setup 47ms, collect 254ms, tests 60ms, environment 368ms, prepare 58ms)

Error: Process completed with exit code 1.
