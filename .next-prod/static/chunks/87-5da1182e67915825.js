"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[87],{9087:function(e,t,r){r.r(t),r.d(t,{useFeedStore:function(){return d}});var o=r(3011),a=r(7205);let d=(0,o.U)((e,t)=>({feeds:new Map,folders:new Map,feedsWithCounts:new Map,loadingFeeds:!1,feedsError:null,totalUnreadCount:0,folderUnreadCounts:new Map,loadFeedHierarchy:async()=>{let r=performance.now();console.log("[FeedStore] Starting loadFeedHierarchy..."),e({loadingFeeds:!0,feedsError:null});try{var o,d,n,l;let i=performance.now(),{data:s}=await a.OQ.from("users").select("id").eq("inoreader_id","shayon").single();if(console.log("[FeedStore] User query took ".concat((performance.now()-i).toFixed(2),"ms")),!s)throw Error("User not found");let c=performance.now(),[f,u]=await Promise.all([a.OQ.from("feeds").select("*").eq("user_id",s.id),a.OQ.from("folders").select("*").eq("user_id",s.id).order("name")]);if(console.log("[FeedStore] Feeds/folders query took ".concat((performance.now()-c).toFixed(2),"ms")),console.log("[FeedStore] Loaded ".concat((null===(o=f.data)||void 0===o?void 0:o.length)||0," feeds and ").concat((null===(d=u.data)||void 0===d?void 0:d.length)||0," folders")),f.error)throw f.error;if(u.error)throw u.error;let p=new Map,w=new Map;null===(n=f.data)||void 0===n||n.forEach(e=>{p.set(e.id,{id:e.id,title:e.title||"",customTitle:e.title,url:e.url||"",htmlUrl:e.url||"",iconUrl:void 0,folderId:e.folder_id,unreadCount:e.unread_count||0,isActive:!0,isPartialContent:e.is_partial_content||!1,createdAt:new Date(e.created_at||Date.now()),updatedAt:new Date(e.updated_at||Date.now()),inoreaderId:e.inoreader_id||void 0})}),null===(l=u.data)||void 0===l||l.forEach(e=>{w.set(e.id,{id:e.id,title:e.name||"",parentId:e.parent_id,sortOrder:0,unreadCount:0,isExpanded:!0,createdAt:new Date(e.created_at||Date.now()),updatedAt:new Date(e.updated_at||Date.now())})});let g=performance.now();console.log("[FeedStore] Data transformation took ".concat((performance.now()-g).toFixed(2),"ms")),e({feeds:p,folders:w,loadingFeeds:!1});let F=performance.now();await t().updateUnreadCounts(),console.log("[FeedStore] Unread counts update took ".concat((performance.now()-F).toFixed(2),"ms")),console.log("[FeedStore] Total loadFeedHierarchy took ".concat((performance.now()-r).toFixed(2),"ms"))}catch(t){console.error("Failed to load feeds:",t),console.log("[FeedStore] Failed after ".concat((performance.now()-r).toFixed(2),"ms")),e({loadingFeeds:!1,feedsError:"Failed to load feeds: ".concat(t)})}},getFeed:e=>t().feeds.get(e),getFolder:e=>t().folders.get(e),updateFeedTitle:async(r,o)=>{try{let{error:d}=await a.OQ.from("feeds").update({title:o,updated_at:new Date().toISOString()}).eq("id",r);if(d)throw d;let{feeds:n}=t(),l=n.get(r);if(l){let t=new Map(n);t.set(r,{...l,title:o,customTitle:o}),e({feeds:t})}}catch(t){console.error("Failed to update feed title:",t),e({feedsError:"Failed to update feed title: ".concat(t)})}},toggleFeedActive:async r=>{try{let{feeds:o}=t(),a=o.get(r);if(!a)return;let d=!a.isActive,n=new Map(o);n.set(r,{...a,isActive:d}),e({feeds:n})}catch(e){console.error("Failed to toggle feed status:",e)}},moveFeedToFolder:async(r,o)=>{try{let{error:d}=await a.OQ.from("feeds").update({folder_id:o,updated_at:new Date().toISOString()}).eq("id",r);if(d)throw d;let{feeds:n}=t(),l=n.get(r);if(l){let t=new Map(n);t.set(r,{...l,folderId:o}),e({feeds:t})}await t().updateUnreadCounts()}catch(e){console.error("Failed to move feed:",e)}},updateFeedPartialContent:async(r,o)=>{try{let{error:d}=await a.OQ.from("feeds").update({is_partial_content:o,updated_at:new Date().toISOString()}).eq("id",r);if(d)throw d;let{feeds:n}=t(),l=n.get(r);if(l){let t=new Map(n);t.set(r,{...l,isPartialContent:o}),e({feeds:t})}}catch(t){console.error("Failed to update feed partial content setting:",t),e({feedsError:"Failed to update feed setting: ".concat(t)})}},createFolder:async(r,o)=>{try{let{data:d}=await a.OQ.from("users").select("id").eq("inoreader_id","shayon").single();if(!d)throw Error("User not found");let{data:n,error:l}=await a.OQ.from("folders").insert({user_id:d.id,name:r,parent_id:o||null,inoreader_id:"folder_".concat(Date.now())}).select().single();if(l)throw l;let{folders:i}=t(),s=new Map(i);return s.set(n.id,{id:n.id,title:n.name||"",parentId:n.parent_id,sortOrder:0,unreadCount:0,isExpanded:!0,createdAt:new Date(n.created_at||Date.now()),updatedAt:new Date(n.updated_at||Date.now())}),e({folders:s}),n.id}catch(t){return console.error("Failed to create folder:",t),e({feedsError:"Failed to create folder: ".concat(t)}),null}},updateFolderTitle:async(r,o)=>{try{let{error:d}=await a.OQ.from("folders").update({name:o,updated_at:new Date().toISOString()}).eq("id",r);if(d)throw d;let{folders:n}=t(),l=n.get(r);if(l){let t=new Map(n);t.set(r,{...l,title:o}),e({folders:t})}}catch(e){console.error("Failed to update folder title:",e)}},deleteFolder:async r=>{try{await a.OQ.from("feeds").update({folder_id:null,updated_at:new Date().toISOString()}).eq("folder_id",r),await a.OQ.from("folders").update({parent_id:null,updated_at:new Date().toISOString()}).eq("parent_id",r);let{error:e}=await a.OQ.from("folders").delete().eq("id",r);if(e)throw e;await t().loadFeedHierarchy()}catch(t){console.error("Failed to delete folder:",t),e({feedsError:"Failed to delete folder: ".concat(t)})}},updateUnreadCounts:async()=>{let r=performance.now();console.log("[FeedStore] Starting updateUnreadCounts...");try{let{feeds:o,folders:d}=t(),n=new Map,l=new Map,i=0;console.log("[FeedStore] Calculating unread counts for ".concat(o.size," feeds..."));let s=performance.now(),{data:c}=await a.OQ.from("users").select("id").eq("inoreader_id","shayon").single();if(!c){console.error("[FeedStore] User not found for unread counts");return}let f=null,u=null;try{let e=await a.OQ.rpc("get_unread_counts_by_feed",{p_user_id:c.id});f=e.data,u=e.error}catch(t){console.log("[FeedStore] Database function not found, using fallback method");let e=await a.OQ.from("articles").select("feed_id").eq("user_id",c.id).eq("is_read",!1);f=e.data,u=e.error}let p=new Map;for(let[e,t]of(!u&&f&&("unread_count"in(f[0]||{})?f.forEach(e=>{p.set(e.feed_id,e.unread_count)}):f.forEach(e=>{if(e.feed_id){let t=p.get(e.feed_id)||0;p.set(e.feed_id,t+1)}})),console.log("[FeedStore] Unread count query took ".concat((performance.now()-s).toFixed(2),"ms")),Array.from(o.entries()))){let r=p.get(e)||0;if(n.set(e,{...t,unreadCount:r}),i+=r,t.folderId){let e=l.get(t.folderId)||0;l.set(t.folderId,e+r)}}console.log("[FeedStore] Total unread articles: ".concat(i));let w=(e,t)=>{let r=d.get(e);if(null==r?void 0:r.parentId){let e=l.get(r.parentId)||0;l.set(r.parentId,e+t),w(r.parentId,t)}};for(let[e,t]of Array.from(l.entries())){let r=d.get(e);(null==r?void 0:r.parentId)&&w(r.parentId,t)}e({feedsWithCounts:n,folderUnreadCounts:l,totalUnreadCount:i}),console.log("[FeedStore] updateUnreadCounts completed in ".concat((performance.now()-r).toFixed(2),"ms"))}catch(e){console.error("Failed to update unread counts:",e),console.log("[FeedStore] updateUnreadCounts failed after ".concat((performance.now()-r).toFixed(2),"ms"))}},incrementUnreadCount:(r,o)=>{let{feedsWithCounts:a,folderUnreadCounts:d,folders:n,totalUnreadCount:l}=t(),i=a.get(r);if(i){let t=new Map(a);t.set(r,{...i,unreadCount:Math.max(0,i.unreadCount+o)});let s=new Map(d),c=i.folderId;for(;c;){let e=s.get(c)||0;s.set(c,Math.max(0,e+o));let t=n.get(c);c=(null==t?void 0:t.parentId)||null}e({feedsWithCounts:t,folderUnreadCounts:s,totalUnreadCount:Math.max(0,l+o)})}},getFeedsInFolder:e=>{let{feeds:r}=t();return Array.from(r.values()).filter(t=>t.folderId===e).sort((e,t)=>String(e.title||"").localeCompare(String(t.title||""),void 0,{numeric:!0,sensitivity:"base"}))},getSubfolders:e=>{let{folders:r}=t();return Array.from(r.values()).filter(t=>t.parentId===e).sort((e,t)=>e.sortOrder-t.sortOrder)},getFeedPath:e=>{let{feeds:r,folders:o}=t(),a=[],d=r.get(e);if(!d)return a;let n=d.folderId;for(;n;){let e=o.get(n);if(!e)break;a.unshift(e.title),n=e.parentId}return a},clearError:()=>e({feedsError:null}),refreshFeeds:async()=>{await t().loadFeedHierarchy()}}))}}]);