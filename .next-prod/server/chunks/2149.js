"use strict";exports.id=2149,exports.ids=[2149],exports.modules={2149:(e,t,r)=>{r.r(t),r.d(t,{useFeedStore:()=>a});var o=r(8408),d=r(3344);let a=(0,o.U)((e,t)=>({feeds:new Map,folders:new Map,feedsWithCounts:new Map,loadingFeeds:!1,feedsError:null,totalUnreadCount:0,folderUnreadCounts:new Map,loadFeedHierarchy:async()=>{let r=performance.now();console.log("[FeedStore] Starting loadFeedHierarchy..."),e({loadingFeeds:!0,feedsError:null});try{let o=performance.now(),{data:a}=await d.OQ.from("users").select("id").eq("inoreader_id","shayon").single();if(console.log(`[FeedStore] User query took ${(performance.now()-o).toFixed(2)}ms`),!a)throw Error("User not found");let n=performance.now(),[l,i]=await Promise.all([d.OQ.from("feeds").select("*").eq("user_id",a.id),d.OQ.from("folders").select("*").eq("user_id",a.id).order("name")]);if(console.log(`[FeedStore] Feeds/folders query took ${(performance.now()-n).toFixed(2)}ms`),console.log(`[FeedStore] Loaded ${l.data?.length||0} feeds and ${i.data?.length||0} folders`),l.error)throw l.error;if(i.error)throw i.error;let s=new Map,f=new Map;l.data?.forEach(e=>{s.set(e.id,{id:e.id,title:e.title||"",customTitle:e.title,url:e.url||"",htmlUrl:e.url||"",iconUrl:void 0,folderId:e.folder_id,unreadCount:e.unread_count||0,isActive:!0,isPartialContent:e.is_partial_content||!1,createdAt:new Date(e.created_at||Date.now()),updatedAt:new Date(e.updated_at||Date.now()),inoreaderId:e.inoreader_id||void 0})}),i.data?.forEach(e=>{f.set(e.id,{id:e.id,title:e.name||"",parentId:e.parent_id,sortOrder:0,unreadCount:0,isExpanded:!0,createdAt:new Date(e.created_at||Date.now()),updatedAt:new Date(e.updated_at||Date.now())})});let c=performance.now();console.log(`[FeedStore] Data transformation took ${(performance.now()-c).toFixed(2)}ms`),e({feeds:s,folders:f,loadingFeeds:!1});let u=performance.now();await t().updateUnreadCounts(),console.log(`[FeedStore] Unread counts update took ${(performance.now()-u).toFixed(2)}ms`),console.log(`[FeedStore] Total loadFeedHierarchy took ${(performance.now()-r).toFixed(2)}ms`)}catch(t){console.error("Failed to load feeds:",t),console.log(`[FeedStore] Failed after ${(performance.now()-r).toFixed(2)}ms`),e({loadingFeeds:!1,feedsError:`Failed to load feeds: ${t}`})}},getFeed:e=>t().feeds.get(e),getFolder:e=>t().folders.get(e),updateFeedTitle:async(r,o)=>{try{let{error:a}=await d.OQ.from("feeds").update({title:o,updated_at:new Date().toISOString()}).eq("id",r);if(a)throw a;let{feeds:n}=t(),l=n.get(r);if(l){let t=new Map(n);t.set(r,{...l,title:o,customTitle:o}),e({feeds:t})}}catch(t){console.error("Failed to update feed title:",t),e({feedsError:`Failed to update feed title: ${t}`})}},toggleFeedActive:async r=>{try{let{feeds:o}=t(),d=o.get(r);if(!d)return;let a=!d.isActive,n=new Map(o);n.set(r,{...d,isActive:a}),e({feeds:n})}catch(e){console.error("Failed to toggle feed status:",e)}},moveFeedToFolder:async(r,o)=>{try{let{error:a}=await d.OQ.from("feeds").update({folder_id:o,updated_at:new Date().toISOString()}).eq("id",r);if(a)throw a;let{feeds:n}=t(),l=n.get(r);if(l){let t=new Map(n);t.set(r,{...l,folderId:o}),e({feeds:t})}await t().updateUnreadCounts()}catch(e){console.error("Failed to move feed:",e)}},updateFeedPartialContent:async(r,o)=>{try{let{error:a}=await d.OQ.from("feeds").update({is_partial_content:o,updated_at:new Date().toISOString()}).eq("id",r);if(a)throw a;let{feeds:n}=t(),l=n.get(r);if(l){let t=new Map(n);t.set(r,{...l,isPartialContent:o}),e({feeds:t})}}catch(t){console.error("Failed to update feed partial content setting:",t),e({feedsError:`Failed to update feed setting: ${t}`})}},createFolder:async(r,o)=>{try{let{data:a}=await d.OQ.from("users").select("id").eq("inoreader_id","shayon").single();if(!a)throw Error("User not found");let{data:n,error:l}=await d.OQ.from("folders").insert({user_id:a.id,name:r,parent_id:o||null,inoreader_id:`folder_${Date.now()}`}).select().single();if(l)throw l;let{folders:i}=t(),s=new Map(i);return s.set(n.id,{id:n.id,title:n.name||"",parentId:n.parent_id,sortOrder:0,unreadCount:0,isExpanded:!0,createdAt:new Date(n.created_at||Date.now()),updatedAt:new Date(n.updated_at||Date.now())}),e({folders:s}),n.id}catch(t){return console.error("Failed to create folder:",t),e({feedsError:`Failed to create folder: ${t}`}),null}},updateFolderTitle:async(r,o)=>{try{let{error:a}=await d.OQ.from("folders").update({name:o,updated_at:new Date().toISOString()}).eq("id",r);if(a)throw a;let{folders:n}=t(),l=n.get(r);if(l){let t=new Map(n);t.set(r,{...l,title:o}),e({folders:t})}}catch(e){console.error("Failed to update folder title:",e)}},deleteFolder:async r=>{try{await d.OQ.from("feeds").update({folder_id:null,updated_at:new Date().toISOString()}).eq("folder_id",r),await d.OQ.from("folders").update({parent_id:null,updated_at:new Date().toISOString()}).eq("parent_id",r);let{error:e}=await d.OQ.from("folders").delete().eq("id",r);if(e)throw e;await t().loadFeedHierarchy()}catch(t){console.error("Failed to delete folder:",t),e({feedsError:`Failed to delete folder: ${t}`})}},updateUnreadCounts:async()=>{let r=performance.now();console.log("[FeedStore] Starting updateUnreadCounts...");try{let{feeds:o,folders:a}=t(),n=new Map,l=new Map,i=0;console.log(`[FeedStore] Calculating unread counts for ${o.size} feeds...`);let s=performance.now(),{data:f}=await d.OQ.from("users").select("id").eq("inoreader_id","shayon").single();if(!f){console.error("[FeedStore] User not found for unread counts");return}let c=null,u=null;try{let e=await d.OQ.rpc("get_unread_counts_by_feed",{p_user_id:f.id});c=e.data,u=e.error}catch(t){console.log("[FeedStore] Database function not found, using fallback method");let e=await d.OQ.from("articles").select("feed_id").eq("user_id",f.id).eq("is_read",!1);c=e.data,u=e.error}let p=new Map;for(let[e,t]of(!u&&c&&("unread_count"in(c[0]||{})?c.forEach(e=>{p.set(e.feed_id,e.unread_count)}):c.forEach(e=>{if(e.feed_id){let t=p.get(e.feed_id)||0;p.set(e.feed_id,t+1)}})),console.log(`[FeedStore] Unread count query took ${(performance.now()-s).toFixed(2)}ms`),Array.from(o.entries()))){let r=p.get(e)||0;if(n.set(e,{...t,unreadCount:r}),i+=r,t.folderId){let e=l.get(t.folderId)||0;l.set(t.folderId,e+r)}}console.log(`[FeedStore] Total unread articles: ${i}`);let w=(e,t)=>{let r=a.get(e);if(r?.parentId){let e=l.get(r.parentId)||0;l.set(r.parentId,e+t),w(r.parentId,t)}};for(let[e,t]of Array.from(l.entries())){let r=a.get(e);r?.parentId&&w(r.parentId,t)}e({feedsWithCounts:n,folderUnreadCounts:l,totalUnreadCount:i}),console.log(`[FeedStore] updateUnreadCounts completed in ${(performance.now()-r).toFixed(2)}ms`)}catch(e){console.error("Failed to update unread counts:",e),console.log(`[FeedStore] updateUnreadCounts failed after ${(performance.now()-r).toFixed(2)}ms`)}},incrementUnreadCount:(r,o)=>{let{feedsWithCounts:d,folderUnreadCounts:a,folders:n,totalUnreadCount:l}=t(),i=d.get(r);if(i){let t=new Map(d);t.set(r,{...i,unreadCount:Math.max(0,i.unreadCount+o)});let s=new Map(a),f=i.folderId;for(;f;){let e=s.get(f)||0;s.set(f,Math.max(0,e+o));let t=n.get(f);f=t?.parentId||null}e({feedsWithCounts:t,folderUnreadCounts:s,totalUnreadCount:Math.max(0,l+o)})}},getFeedsInFolder:e=>{let{feeds:r}=t();return Array.from(r.values()).filter(t=>t.folderId===e).sort((e,t)=>String(e.title||"").localeCompare(String(t.title||""),void 0,{numeric:!0,sensitivity:"base"}))},getSubfolders:e=>{let{folders:r}=t();return Array.from(r.values()).filter(t=>t.parentId===e).sort((e,t)=>e.sortOrder-t.sortOrder)},getFeedPath:e=>{let{feeds:r,folders:o}=t(),d=[],a=r.get(e);if(!a)return d;let n=a.folderId;for(;n;){let e=o.get(n);if(!e)break;d.unshift(e.title),n=e.parentId}return d},clearError:()=>e({feedsError:null}),refreshFeeds:async()=>{await t().loadFeedHierarchy()}}))}};