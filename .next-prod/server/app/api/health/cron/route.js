"use strict";(()=>{var e={};e.id=6193,e.ids=[6193],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},629:e=>{e.exports=require("fs/promises")},5315:e=>{e.exports=require("path")},8945:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>f,patchFetch:()=>x,requestAsyncStorage:()=>v,routeModule:()=>h,serverHooks:()=>y,staticGenerationAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{GET:()=>d,dynamic:()=>m});var n=r(9303),a=r(8716),i=r(670),o=r(7070),u=r(629),c=r.n(u),l=r(5315),p=r.n(l);let m="force-dynamic";async function d(e){try{let e=p().join(process.cwd(),"logs","cron-health.jsonl");if(!await c().access(e).then(()=>!0).catch(()=>!1))return o.NextResponse.json({status:"unknown",service:"rss-sync-cron",uptime:0,lastActivity:new Date().toISOString(),errorCount:0,dependencies:{},performance:{avgSyncTime:0,avgDbQueryTime:0,avgApiCallTime:0},details:{message:"No health status file found. Cron service may not have started yet."}});let t=(await c().readFile(e,"utf-8")).trim().split("\n").filter(e=>e.length>0);if(0===t.length)return o.NextResponse.json({status:"unknown",service:"rss-sync-cron",uptime:0,lastActivity:new Date().toISOString(),errorCount:0,dependencies:{},performance:{avgSyncTime:0,avgDbQueryTime:0,avgApiCallTime:0},details:{message:"Health status file is empty."}});let r=JSON.parse(t[t.length-1]),s={status:r.status||"unknown",service:"rss-sync-cron",uptime:r.uptime||0,lastActivity:r.lastRun||r.timestamp,errorCount:r.recentRuns?.failed||0,dependencies:{},performance:{avgSyncTime:r.performance?.avgSyncTime||0,avgDbQueryTime:0,avgApiCallTime:0},details:{enabled:r.enabled,schedule:r.schedule,nextRun:r.nextRun,lastRunStatus:r.lastRunStatus,recentRuns:r.recentRuns,lastCheck:r.timestamp}},n="unhealthy"===s.status?503:200;return o.NextResponse.json(s,{status:n})}catch(e){return console.error("Cron health check error:",e),o.NextResponse.json({status:"unhealthy",service:"rss-sync-cron",uptime:0,lastActivity:new Date().toISOString(),errorCount:1,dependencies:{},performance:{avgSyncTime:0,avgDbQueryTime:0,avgApiCallTime:0},error:e instanceof Error?e.message:"Failed to read health status"},{status:503})}}let h=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/health/cron/route",pathname:"/api/health/cron",filename:"route",bundlePath:"app/api/health/cron/route"},resolvedPagePath:"/Users/shayon/DevProjects/rss-news-reader/src/app/api/health/cron/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:v,staticGenerationAsyncStorage:g,serverHooks:y}=h,f="/api/health/cron/route";function x(){return(0,i.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:g})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[9276,5972],()=>r(8945));module.exports=s})();