(()=>{var e={};e.id=9475,e.ids=[9475],e.modules={399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{"use strict";e.exports=require("crypto")},7702:e=>{"use strict";e.exports=require("events")},2048:e=>{"use strict";e.exports=require("fs")},2615:e=>{"use strict";e.exports=require("http")},8791:e=>{"use strict";e.exports=require("https")},8216:e=>{"use strict";e.exports=require("net")},9801:e=>{"use strict";e.exports=require("os")},5315:e=>{"use strict";e.exports=require("path")},8621:e=>{"use strict";e.exports=require("punycode")},6162:e=>{"use strict";e.exports=require("stream")},2452:e=>{"use strict";e.exports=require("tls")},7360:e=>{"use strict";e.exports=require("url")},1568:e=>{"use strict";e.exports=require("zlib")},8359:()=>{},3739:()=>{},4028:(e,t,r)=>{"use strict";r.r(t),r.d(t,{originalPathname:()=>O,patchFetch:()=>b,requestAsyncStorage:()=>T,routeModule:()=>I,serverHooks:()=>S,staticGenerationAsyncStorage:()=>N});var s={};r.r(s),r.d(s,{POST:()=>w});var o=r(9303),n=r(8716),i=r(670),a=r(7070),c=r(843),l=r(4770);let d={randomUUID:l.randomUUID},u=new Uint8Array(256),p=u.length,f=[];for(let e=0;e<256;++e)f.push((e+256).toString(16).slice(1));let h=function(e,t,r){if(d.randomUUID&&!t&&!e)return d.randomUUID();let s=(e=e||{}).random??e.rng?.()??(p>u.length-16&&((0,l.randomFillSync)(u),p=0),u.slice(p,p+=16));if(s.length<16)throw Error("Random bytes length must be >= 16");if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,t){if((r=r||0)<0||r+16>t.length)throw RangeError(`UUID byte range ${r}:${r+15} is out of buffer bounds`);for(let e=0;e<16;++e)t[r+e]=s[e];return t}return function(e,t=0){return(f[e[t+0]]+f[e[t+1]]+f[e[t+2]]+f[e[t+3]]+"-"+f[e[t+4]]+f[e[t+5]]+"-"+f[e[t+6]]+f[e[t+7]]+"-"+f[e[t+8]]+f[e[t+9]]+"-"+f[e[t+10]]+f[e[t+11]]+f[e[t+12]]+f[e[t+13]]+f[e[t+14]]+f[e[t+15]]).toLowerCase()}(s)};var g=r(2760),m=r.n(g);let _=(0,c.eI)("https://rgfxyraamghqnechkppg.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY||"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJnZnh5cmFhbWdocW5lY2hrcHBnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI2ODg5NzAsImV4cCI6MjA2ODI2NDk3MH0.hqoXq2YAs6cc96d0baVjZWVdmDW0qytCIHjA-YffSdk");global.syncStatus||(global.syncStatus=new Map);let y=global.syncStatus;async function w(){try{let e=await E();if(!e.allowed)return a.NextResponse.json({error:"rate_limit_exceeded",message:"Inoreader API rate limit exceeded",limit:e.limit,used:e.used,remaining:0},{status:429});let t=h();return y.set(t,{status:"pending",progress:0,startTime:Date.now()}),v(t).catch(e=>{console.error("Sync failed:",e);let r=y.get(t);r&&(r.status="failed",r.error=e.message)}),a.NextResponse.json({success:!0,syncId:t,message:"Sync started successfully",rateLimit:{remaining:e.remaining,limit:e.limit,used:e.used}})}catch(e){return console.error("Failed to start sync:",e),a.NextResponse.json({error:"sync_start_failed",message:"Failed to start sync",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function v(e){let t=y.get(e);if(t)try{t.status="running",t.progress=10,t.message="Loading server tokens...";let e=new(m());await e.getAccessToken(),t.progress=20,t.message="Fetching subscriptions...";let r=await e.makeAuthenticatedRequest("https://www.inoreader.com/reader/api/0/subscription/list");if(!r.ok)throw Error(`Failed to fetch subscriptions: ${r.statusText}`);let s=(await r.json()).subscriptions||[];t.progress=30,t.message=`Found ${s.length} feeds...`;let o=await e.makeAuthenticatedRequest("https://www.inoreader.com/reader/api/0/unread-count");if(!o.ok)throw Error(`Failed to fetch unread counts: ${o.statusText}`);let n=await o.json(),i=new Map(n.unreadcounts?.map(e=>[e.id,e.count])||[]);t.progress=40,t.message="Syncing feeds to Supabase...";let a="shayon",{data:c}=await _.from("users").select("id").eq("inoreader_id",a).single(),l=c?.id;if(!l){let{data:e,error:t}=await _.from("users").insert({email:"shayon@local",inoreader_id:a,preferences:{}}).select("id").single();if(t)throw Error(`Failed to create user: ${t.message}`);l=e.id}let d=new Set;for(let e of s)for(let t of e.categories||[])d.has(t.id)||(d.add(t.id),await _.from("folders").upsert({user_id:l,inoreader_id:t.id,name:t.label,parent_id:null},{onConflict:"inoreader_id"}));t.progress=50,t.message="Syncing feeds...";let u=s.map(e=>({user_id:l,inoreader_id:e.id,title:e.title,url:e.url,folder_id:e.categories?.[0]?.id||null,unread_count:i.get(e.id)||0}));u.length>0&&await _.from("feeds").upsert(u,{onConflict:"inoreader_id"}),t.progress=60,t.message="Fetching recent articles...";let p=process.env.SYNC_MAX_ARTICLES?parseInt(process.env.SYNC_MAX_ARTICLES):100,f=await e.makeAuthenticatedRequest(`https://www.inoreader.com/reader/api/0/stream/contents/user/-/state/com.google/reading-list?n=${p}`);if(!f.ok)throw Error(`Failed to fetch articles: ${f.statusText}`);let h=(await f.json()).items||[];t.progress=70,t.message=`Processing ${h.length} articles...`;let{data:g}=await _.from("feeds").select("id, inoreader_id").eq("user_id",l),y=new Map(g?.map(e=>[e.inoreader_id,e.id])||[]),w=new Date().toISOString();if(h.length>0&&y.size>0){let e=h.filter(e=>{let t=e.origin?.streamId;return t&&y.has(t)}).map(e=>{let t=e.origin?.streamId;return{feed_id:y.get(t),inoreader_id:e.id,title:e.title||"Untitled",content:e.content?.content||e.summary?.content||"",url:e.canonical?.[0]?.href||e.alternate?.[0]?.href||"",published_at:e.published?new Date(1e3*e.published).toISOString():null,is_read:e.categories?.includes("user/-/state/com.google/read")||!1,is_starred:e.categories?.includes("user/-/state/com.google/starred")||!1,last_sync_update:w}});if(e.length>0){let r=e.map(e=>e.inoreader_id);await _.from("sync_queue").delete().in("inoreader_id",r);let{data:s}=await _.from("articles").select("inoreader_id, is_read, is_starred, last_local_update, last_sync_update, updated_at").in("inoreader_id",r),o=new Map(s?.map(e=>[e.inoreader_id,e])||[]),n=e.map(e=>{let t=o.get(e.inoreader_id);if(t&&t.last_local_update){let r=t.last_sync_update||t.updated_at;if(new Date(t.last_local_update)>new Date(r))return console.log(`[Sync] Preserving local state for article ${e.inoreader_id}`),{...e,is_read:t.is_read,is_starred:t.is_starred,last_sync_update:w}}return e});for(let e=0;e<n.length;e+=50){let r=n.slice(e,e+50);await _.from("articles").upsert(r,{onConflict:"inoreader_id"}),t.progress=70+Math.floor(e/n.length*20)}}}t.progress=90,t.message="Refreshing feed statistics...",console.log("[Sync] Refreshing feed statistics...");try{let{error:e}=await _.rpc("refresh_feed_stats");e?console.error("Failed to refresh feed stats:",e):console.log("[Sync] Feed stats refreshed successfully")}catch(e){console.error("Error refreshing feed stats:",e)}t.progress=92,t.message="Checking for partial content feeds...",console.log("[Sync] Starting auto-fetch for partial content feeds...");try{await k(l)}catch(e){console.error("[Sync] Auto-fetch error:",e)}t.progress=95,t.message="Updating sync metadata...",console.log("[Sync] Updating sync metadata..."),await _.from("sync_metadata").upsert({key:"last_sync_time",value:new Date().toISOString()},{onConflict:"key"}),await D("inoreader",4),t.progress=98,t.message="Syncing local changes to Inoreader...",console.log("[Sync] Triggering bidirectional sync...");try{let e=process.env.SYNC_SERVER_URL||"http://localhost:3001",t=await fetch(`${e}/server/sync/trigger`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({force:!0})});t.ok?console.log("[Sync] Bidirectional sync triggered successfully"):console.error("[Sync] Failed to trigger bidirectional sync:",await t.text())}catch(e){console.error("[Sync] Error triggering bidirectional sync:",e)}t.status="completed",t.progress=100,t.message=`Sync completed. Synced ${s.length} feeds and ${h.length} articles.`}catch(e){throw console.error("Sync error:",e),t.status="failed",t.error=e instanceof Error?e.message:"Unknown error",e}}async function E(){let e=new Date().toISOString().split("T")[0],{data:t,error:r}=await _.from("api_usage").select("count").eq("service","inoreader").eq("date",e).single();if(r&&"PGRST116"!==r.code)return console.error("Rate limit check error:",r),{allowed:!0,remaining:100,used:0,limit:100};let s=t?.count||0,o=100-s;return o<=20&&o>5?console.warn(`Inoreader API rate limit warning: ${o} calls remaining today`):o<=5&&console.error(`Inoreader API rate limit critical: Only ${o} calls remaining today`),{allowed:o>0,remaining:o,used:s,limit:100}}async function D(e,t=1){let r=new Date().toISOString().split("T")[0];try{let{data:s}=await _.from("api_usage").select("count").eq("service",e).eq("date",r).single();s?await _.from("api_usage").update({count:s.count+t}).eq("service",e).eq("date",r):await _.from("api_usage").insert({service:e,date:r,count:t})}catch(e){console.error("Failed to track API usage:",e)}}async function k(e){try{let t=new Date(Date.now()-18e5).toISOString(),{count:r}=await _.from("fetch_logs").select("*",{count:"exact",head:!0}).eq("fetch_type","auto").gte("created_at",t);if(r&&r>=50){console.log(`[Auto-fetch] Rate limit reached: ${r}/50 in last 30 minutes`);return}let s=50-(r||0);console.log(`[Auto-fetch] Rate limit: ${s} fetches remaining`);let{data:o}=await _.from("feeds").select("id").eq("user_id",e).eq("is_partial_content",!0);if(!o||0===o.length){console.log("[Auto-fetch] No partial content feeds found");return}let n=o.map(e=>e.id);console.log(`[Auto-fetch] Found ${o.length} partial content feeds`);let{data:i}=await _.from("articles").select("id, url, feed_id").in("feed_id",n).eq("has_full_content",!1).order("published_at",{ascending:!1}).limit(s);if(!i||0===i.length){console.log("[Auto-fetch] No articles need content extraction");return}for(let e of(console.log(`[Auto-fetch] Fetching content for ${i.length} articles`),i)){let t=Date.now();try{await _.from("fetch_logs").insert({article_id:e.id,feed_id:e.feed_id,fetch_type:"auto",status:"attempt"});let r=await fetch(`http://100.96.166.53/reader/api/articles/${e.id}/fetch-content`,{method:"POST",headers:{"Content-Type":"application/json"}}),s=Date.now()-t;if(r.ok)await _.from("fetch_logs").insert({article_id:e.id,feed_id:e.feed_id,fetch_type:"auto",status:"success",duration_ms:s}),console.log(`[Auto-fetch] Success: Article ${e.id} (${s}ms)`);else{let t=await r.json();await _.from("fetch_logs").insert({article_id:e.id,feed_id:e.feed_id,fetch_type:"auto",status:"failure",error_reason:t.error||"fetch_failed",error_details:t,duration_ms:s}),console.log(`[Auto-fetch] Failed: Article ${e.id} - ${t.error}`)}}catch(s){let r=Date.now()-t;await _.from("fetch_logs").insert({article_id:e.id,feed_id:e.feed_id,fetch_type:"auto",status:"failure",error_reason:"exception",error_details:{message:s instanceof Error?s.message:"Unknown error"},duration_ms:r}),console.error(`[Auto-fetch] Exception: Article ${e.id}`,s)}await new Promise(e=>setTimeout(e,1e3))}}catch(e){throw console.error("[Auto-fetch] Error in performAutoFetch:",e),e}}let I=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/sync/route",pathname:"/api/sync",filename:"route",bundlePath:"app/api/sync/route"},resolvedPagePath:"/Users/shayon/DevProjects/rss-news-reader/src/app/api/sync/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:T,staticGenerationAsyncStorage:N,serverHooks:S}=I,O="/api/sync/route";function b(){return(0,i.patchFetch)({serverHooks:S,staticGenerationAsyncStorage:N})}},6636:(e,t,r)=>{let s=r(2048),o=r(5315),n=r(9801),i=r(4770),a=r(1564).version,c=["\uD83D\uDD10 encrypt with dotenvx: https://dotenvx.com","\uD83D\uDD10 prevent committing .env to code: https://dotenvx.com/precommit","\uD83D\uDD10 prevent building .env in docker: https://dotenvx.com/prebuild","\uD83D\uDEE0️  run anywhere with `dotenvx run -- yourcommand`","⚙️  specify custom .env file path with { path: '/custom/path/.env' }","⚙️  enable debug logging with { debug: true }","⚙️  override existing env vars with { override: true }","⚙️  suppress all logs with { quiet: true }","⚙️  write to custom object with { processEnv: myObject }","⚙️  load multiple .env files with { path: ['.env.local', '.env'] }"];function l(e){return"string"==typeof e?!["false","0","no","off",""].includes(e.toLowerCase()):!!e}let d=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function u(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function p(e){console.log(`[dotenv@${a}] ${e}`)}function f(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function h(e){let t=null;if(e&&e.path&&e.path.length>0){if(Array.isArray(e.path))for(let r of e.path)s.existsSync(r)&&(t=r.endsWith(".vault")?r:`${r}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`}else t=o.resolve(process.cwd(),".env.vault");return s.existsSync(t)?t:null}function g(e){return"~"===e[0]?o.join(n.homedir(),e.slice(1)):e}let m={configDotenv:function(e){let t;let r=o.resolve(process.cwd(),".env"),n="utf8",i=process.env;e&&null!=e.processEnv&&(i=e.processEnv);let a=l(i.DOTENV_CONFIG_DEBUG||e&&e.debug),d=l(i.DOTENV_CONFIG_QUIET||e&&e.quiet);e&&e.encoding?n=e.encoding:a&&u("No encoding is specified. UTF-8 is used by default");let f=[r];if(e&&e.path){if(Array.isArray(e.path))for(let t of(f=[],e.path))f.push(g(t));else f=[g(e.path)]}let h={};for(let r of f)try{let t=m.parse(s.readFileSync(r,{encoding:n}));m.populate(h,t,e)}catch(e){a&&u(`Failed to load ${r} ${e.message}`),t=e}let _=m.populate(i,h,e);if(a=l(i.DOTENV_CONFIG_DEBUG||a),d=l(i.DOTENV_CONFIG_QUIET||d),a||!d){var y;let e=Object.keys(_).length,r=[];for(let e of f)try{let t=o.relative(process.cwd(),e);r.push(t)}catch(r){a&&u(`Failed to load ${e} ${r.message}`),t=r}p(`injecting env (${e}) from ${r.join(",")} ${(y=`(tip: ${c[Math.floor(Math.random()*c.length)]})`,process.stdout.isTTY?`\x1b[2m${y}\x1b[0m`:y)}`)}return t?{parsed:h,error:t}:{parsed:h}},_configVault:function(e){let t=l(process.env.DOTENV_CONFIG_DEBUG||e&&e.debug),r=l(process.env.DOTENV_CONFIG_QUIET||e&&e.quiet);(t||!r)&&p("Loading env from encrypted .env.vault");let s=m._parseVault(e),o=process.env;return e&&null!=e.processEnv&&(o=e.processEnv),m.populate(o,s,e),{parsed:s}},_parseVault:function(e){let t;let r=h(e=e||{});e.path=r;let s=m.configDotenv(e);if(!s.parsed){let e=Error(`MISSING_DATA: Cannot parse ${r} for an unknown reason`);throw e.code="MISSING_DATA",e}let o=f(e).split(","),n=o.length;for(let e=0;e<n;e++)try{let r=o[e].trim(),n=function(e,t){let r;try{r=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){let e=Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}let s=r.password;if(!s){let e=Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}let o=r.searchParams.get("environment");if(!o){let e=Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}let n=`DOTENV_VAULT_${o.toUpperCase()}`,i=e.parsed[n];if(!i){let e=Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${n} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:i,key:s}}(s,r);t=m.decrypt(n.ciphertext,n.key);break}catch(t){if(e+1>=n)throw t}return m.parse(t)},config:function(e){if(0===f(e).length)return m.configDotenv(e);let t=h(e);if(!t){var r;return r=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.error(`[dotenv@${a}][WARN] ${r}`),m.configDotenv(e)}return m._configVault(e)},decrypt:function(e,t){let r=Buffer.from(t.slice(-64),"hex"),s=Buffer.from(e,"base64"),o=s.subarray(0,12),n=s.subarray(-16);s=s.subarray(12,-16);try{let e=i.createDecipheriv("aes-256-gcm",r,o);return e.setAuthTag(n),`${e.update(s)}${e.final()}`}catch(s){let e=s instanceof RangeError,t="Invalid key length"===s.message,r="Unsupported state or unable to authenticate data"===s.message;if(e||t){let e=Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(r){let e=Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw s}},parse:function(e){let t;let r={},s=e.toString();for(s=s.replace(/\r\n?/mg,"\n");null!=(t=d.exec(s));){let e=t[1],s=t[2]||"",o=(s=s.trim())[0];s=s.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),'"'===o&&(s=(s=s.replace(/\\n/g,"\n")).replace(/\\r/g,"\r")),r[e]=s}return r},populate:function(e,t,r={}){let s=!!(r&&r.debug),o=!!(r&&r.override),n={};if("object"!=typeof t){let e=Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(let r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(!0===o&&(e[r]=t[r],n[r]=t[r]),s&&(!0===o?u(`"${r}" is already defined and WAS overwritten`):u(`"${r}" is already defined and was NOT overwritten`))):(e[r]=t[r],n[r]=t[r]);return n}};e.exports.configDotenv=m.configDotenv,e.exports._configVault=m._configVault,e.exports._parseVault=m._parseVault,e.exports.config=m.config,e.exports.decrypt=m.decrypt,e.exports.parse=m.parse,e.exports.populate=m.populate,e.exports=m},2760:(e,t,r)=>{"use strict";let s=r(4770),o=r(2048).promises,n=r(5315);r(6636).config();class i{constructor(){this.tokensPath=process.env.RSS_READER_TOKENS_PATH||n.join(process.env.HOME,".rss-reader","tokens.json"),this.encryptionKey=Buffer.from(process.env.TOKEN_ENCRYPTION_KEY,"base64"),this.clientId=process.env.INOREADER_CLIENT_ID,this.clientSecret=process.env.INOREADER_CLIENT_SECRET,this.tokens=null}encrypt(e){let t=s.randomBytes(16),r=s.createCipheriv("aes-256-gcm",this.encryptionKey,t),o=r.update(e,"utf8","hex");o+=r.final("hex");let n=r.getAuthTag();return{encrypted:o,iv:t.toString("hex"),authTag:n.toString("hex")}}decrypt(e){let t=Buffer.from(e.iv,"hex"),r=Buffer.from(e.authTag,"hex"),o=s.createDecipheriv("aes-256-gcm",this.encryptionKey,t);return o.setAuthTag(r),o.update(e.encrypted,"hex","utf8")+o.final("utf8")}async loadTokens(){try{let e=await o.readFile(this.tokensPath,"utf8"),t=JSON.parse(e),r=this.decrypt(t);return this.tokens=JSON.parse(r),this.tokens}catch(e){if("ENOENT"===e.code)throw Error("No tokens found. Please run the OAuth setup first.");throw e}}async saveTokens(e){let t=n.dirname(this.tokensPath);await o.mkdir(t,{recursive:!0});let r=this.encrypt(JSON.stringify(e));await o.writeFile(this.tokensPath,JSON.stringify(r,null,2)),await o.chmod(this.tokensPath,384),this.tokens=e}needsRefresh(){if(!this.tokens)return!0;let e=this.tokens.created_at+1e3*this.tokens.expires_in;return Date.now()>=e-36e5}async refreshTokens(){if(!this.tokens||!this.tokens.refresh_token)throw Error("No refresh token available. Please run OAuth setup again.");console.log("\uD83D\uDD04 Refreshing access token...");let e=new URLSearchParams({grant_type:"refresh_token",refresh_token:this.tokens.refresh_token,client_id:this.clientId,client_secret:this.clientSecret}),t=await fetch("https://www.inoreader.com/oauth2/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:e.toString()});if(!t.ok){let e=await t.text();throw Error(`Token refresh failed: ${e}`)}let r=await t.json();return this.tokens={access_token:r.access_token,refresh_token:r.refresh_token||this.tokens.refresh_token,expires_in:r.expires_in,token_type:r.token_type,scope:r.scope,created_at:Date.now()},await this.saveTokens(this.tokens),console.log("✅ Token refreshed successfully"),this.tokens}async getAccessToken(){return this.tokens||await this.loadTokens(),this.needsRefresh()&&await this.refreshTokens(),this.tokens.access_token}async makeAuthenticatedRequest(e,t={}){let r=await this.getAccessToken(),s={Authorization:`Bearer ${r}`,"Content-Type":"application/json",...t.headers},o=await fetch(e,{...t,headers:s});if(401===o.status){console.log("\uD83D\uDD04 Received 401, attempting token refresh..."),await this.refreshTokens();let r=await this.getAccessToken();return s.Authorization=`Bearer ${r}`,fetch(e,{...t,headers:s})}return o}}e.exports=i},1564:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"17.2.0","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","pretest":"npm run lint && npm run dts-check","test":"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=text --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"homepage":"https://github.com/motdotla/dotenv#readme","funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^18.11.3","decache":"^4.6.2","sinon":"^14.0.1","standard":"^17.0.0","standard-version":"^9.5.0","tap":"^19.2.0","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[9276,5972,843],()=>r(4028));module.exports=s})();