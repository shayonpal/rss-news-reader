name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: "20"
  CI: true

jobs:
  # Quick validation for all PRs
  pr-validation:
    name: 🔍 PR Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 📥 Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔍 TypeScript Check
        run: npm run type-check

      - name: 🧹 Lint Check
        run: npm run lint

      - name: 📊 PR Summary
        run: |
          echo "### 🔍 PR Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: ${{ github.head_ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- Target: ${{ github.base_ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Linting: ✅" >> $GITHUB_STEP_SUMMARY

  # Check for test coverage on changed files
  test-coverage:
    name: 📊 Test Coverage
    needs: pr-validation
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 📥 Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline

      - name: 📊 Run Coverage on Changed Files
        run: |
          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.(ts|tsx|js|jsx)$' | grep -v test | tr '\n' ' ')

          if [ -n "$CHANGED_FILES" ]; then
            echo "Running coverage for changed files: $CHANGED_FILES"
            npx vitest run --coverage --coverage.include="$CHANGED_FILES" || true
          else
            echo "No source files changed, skipping coverage"
          fi

      - name: 📊 Coverage Report
        run: |
          echo "### 📊 Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage/coverage-summary.json ]; then
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            npx c8 report --reporter=text-summary | tail -10 >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "No coverage data available" >> $GITHUB_STEP_SUMMARY
          fi

  # Check for bundle size changes
  bundle-analysis:
    name: 📦 Bundle Analysis
    needs: pr-validation
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 📥 Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base

      - name: 📥 Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Build base branch
        working-directory: base
        run: |
          npm ci --prefer-offline
          npm run build
          du -sh .next/ > ../base-size.txt

      - name: 📦 Build PR branch
        working-directory: pr
        run: |
          npm ci --prefer-offline
          npm run build
          du -sh .next/ > ../pr-size.txt

      - name: 📊 Compare Bundle Sizes
        run: |
          BASE_SIZE=$(cat base-size.txt | awk '{print $1}')
          PR_SIZE=$(cat pr-size.txt | awk '{print $1}')

          echo "### 📦 Bundle Size Comparison" >> $GITHUB_STEP_SUMMARY
          echo "- Base: $BASE_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "- PR: $PR_SIZE" >> $GITHUB_STEP_SUMMARY

          # Simple size comparison (would need more sophisticated logic for real comparison)
          if [[ "$PR_SIZE" > "$BASE_SIZE" ]]; then
            echo "- Change: ⚠️ Size increased" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Change: ✅ Size unchanged or decreased" >> $GITHUB_STEP_SUMMARY
          fi

  # Security check for dependencies
  security-check:
    name: 🔒 Security Check
    needs: pr-validation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 📥 Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🔍 Run npm audit
        run: |
          npm audit --audit-level=high --json > audit-report.json || true

          VULNS=$(cat audit-report.json | jq '.metadata.vulnerabilities.high + .metadata.vulnerabilities.critical' || echo "0")

          echo "### 🔒 Security Check" >> $GITHUB_STEP_SUMMARY
          if [ "$VULNS" -gt "0" ]; then
            echo "- ⚠️ Found $VULNS high/critical vulnerabilities" >> $GITHUB_STEP_SUMMARY
            echo "- Run \`npm audit\` locally for details" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ✅ No high/critical vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          fi

  # Label PR based on changes
  auto-label:
    name: 🏷️ Auto Label
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 🏷️ Apply Labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const labels = [];

            // Get changed files
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });

            // Determine labels based on files
            const hasTests = files.some(f => f.filename.includes('.test.') || f.filename.includes('.spec.'));
            const hasDocs = files.some(f => f.filename.includes('.md') || f.filename.startsWith('docs/'));
            const hasCI = files.some(f => f.filename.includes('.github/workflows'));
            const hasDB = files.some(f => f.filename.includes('supabase') || f.filename.includes('migration'));
            const hasUI = files.some(f => f.filename.includes('components/') || f.filename.includes('.css'));

            if (hasTests) labels.push('tests');
            if (hasDocs) labels.push('documentation');
            if (hasCI) labels.push('ci/cd');
            if (hasDB) labels.push('database');
            if (hasUI) labels.push('ui');

            // Apply size label
            const additions = pr.additions || 0;
            const deletions = pr.deletions || 0;
            const total = additions + deletions;

            if (total < 10) labels.push('size/XS');
            else if (total < 50) labels.push('size/S');
            else if (total < 200) labels.push('size/M');
            else if (total < 500) labels.push('size/L');
            else labels.push('size/XL');

            // Apply labels
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: labels
              });
            }

  # Final status check
  pr-status:
    name: ✅ PR Status
    needs: [pr-validation, test-coverage, bundle-analysis, security-check]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: 📊 Final PR Status
        run: |
          echo "### ✅ PR Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Validation | ${{ needs.pr-validation.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Test Coverage | ${{ needs.test-coverage.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Bundle Analysis | ${{ needs.bundle-analysis.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security | ${{ needs.security-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.pr-validation.result }}" != "success" ]]; then
            echo "❌ PR validation failed" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

          echo "✅ All required checks passed" >> $GITHUB_STEP_SUMMARY
