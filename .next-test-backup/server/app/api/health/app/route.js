/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/health/app/route";
exports.ids = ["app/api/health/app/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fhealth%2Fapp%2Froute&page=%2Fapi%2Fhealth%2Fapp%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fhealth%2Fapp%2Froute.ts&appDir=%2FUsers%2Fshayon%2FDevProjects%2Frss-news-reader%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshayon%2FDevProjects%2Frss-news-reader&isDev=true&tsconfigPath=tsconfig.json&basePath=%2Freader&assetPrefix=%2Freader&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fhealth%2Fapp%2Froute&page=%2Fapi%2Fhealth%2Fapp%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fhealth%2Fapp%2Froute.ts&appDir=%2FUsers%2Fshayon%2FDevProjects%2Frss-news-reader%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshayon%2FDevProjects%2Frss-news-reader&isDev=true&tsconfigPath=tsconfig.json&basePath=%2Freader&assetPrefix=%2Freader&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_shayon_DevProjects_rss_news_reader_src_app_api_health_app_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/health/app/route.ts */ \"(rsc)/./src/app/api/health/app/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/health/app/route\",\n        pathname: \"/api/health/app\",\n        filename: \"route\",\n        bundlePath: \"app/api/health/app/route\"\n    },\n    resolvedPagePath: \"/Users/shayon/DevProjects/rss-news-reader/src/app/api/health/app/route.ts\",\n    nextConfigOutput,\n    userland: _Users_shayon_DevProjects_rss_news_reader_src_app_api_health_app_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/health/app/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZoZWFsdGglMkZhcHAlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmhlYWx0aCUyRmFwcCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmhlYWx0aCUyRmFwcCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNoYXlvbiUyRkRldlByb2plY3RzJTJGcnNzLW5ld3MtcmVhZGVyJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnNoYXlvbiUyRkRldlByb2plY3RzJTJGcnNzLW5ld3MtcmVhZGVyJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JTJGcmVhZGVyJmFzc2V0UHJlZml4PSUyRnJlYWRlciZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN5QjtBQUN0RztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3Jzcy1uZXdzLXJlYWRlci8/MTlhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvc2hheW9uL0RldlByb2plY3RzL3Jzcy1uZXdzLXJlYWRlci9zcmMvYXBwL2FwaS9oZWFsdGgvYXBwL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9oZWFsdGgvYXBwL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvaGVhbHRoL2FwcFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvaGVhbHRoL2FwcC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9zaGF5b24vRGV2UHJvamVjdHMvcnNzLW5ld3MtcmVhZGVyL3NyYy9hcHAvYXBpL2hlYWx0aC9hcHAvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2hlYWx0aC9hcHAvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fhealth%2Fapp%2Froute&page=%2Fapi%2Fhealth%2Fapp%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fhealth%2Fapp%2Froute.ts&appDir=%2FUsers%2Fshayon%2FDevProjects%2Frss-news-reader%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshayon%2FDevProjects%2Frss-news-reader&isDev=true&tsconfigPath=tsconfig.json&basePath=%2Freader&assetPrefix=%2Freader&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/health/app/route.ts":
/*!*****************************************!*\
  !*** ./src/app/api/health/app/route.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* reexport safe */ _route__WEBPACK_IMPORTED_MODULE_0__.GET),\n/* harmony export */   dynamic: () => (/* reexport safe */ _route__WEBPACK_IMPORTED_MODULE_0__.dynamic)\n/* harmony export */ });\n/* harmony import */ var _route__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../route */ \"(rsc)/./src/app/api/health/route.ts\");\n// Re-export the main health check endpoint\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9oZWFsdGgvYXBwL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLDJDQUEyQztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcnNzLW5ld3MtcmVhZGVyLy4vc3JjL2FwcC9hcGkvaGVhbHRoL2FwcC9yb3V0ZS50cz84MDU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFJlLWV4cG9ydCB0aGUgbWFpbiBoZWFsdGggY2hlY2sgZW5kcG9pbnRcbmV4cG9ydCB7IEdFVCwgZHluYW1pYyB9IGZyb20gJy4uL3JvdXRlJzsiXSwibmFtZXMiOlsiR0VUIiwiZHluYW1pYyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/health/app/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/api/health/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/health/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_health_app_health_check__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/health/app-health-check */ \"(rsc)/./src/lib/health/app-health-check.ts\");\n\n\n// Force dynamic rendering for this API route\nconst dynamic = \"force-dynamic\";\nasync function GET(request) {\n    try {\n        // Check if this is a simple ping\n        const url = new URL(request.url);\n        const isPing = url.searchParams.get(\"ping\") === \"true\";\n        if (isPing) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                status: \"ok\",\n                timestamp: new Date()\n            });\n        }\n        // Perform comprehensive health check\n        const health = await _lib_health_app_health_check__WEBPACK_IMPORTED_MODULE_1__.appHealthCheck.checkHealth();\n        // Determine HTTP status code based on health\n        let statusCode = 200;\n        if (health.status === \"unhealthy\") {\n            statusCode = 503; // Service Unavailable\n        } else if (health.status === \"degraded\") {\n            statusCode = 200; // Still return 200 for degraded, but include status in body\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(health, {\n            status: statusCode\n        });\n    } catch (error) {\n        console.error(\"Health check endpoint error:\", error);\n        // Log the error\n        const { AppHealthCheck } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/lib/health/app-health-check */ \"(rsc)/./src/lib/health/app-health-check.ts\"));\n        AppHealthCheck.logError(`Health check endpoint error: ${error instanceof Error ? error.message : \"Unknown error\"}`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: \"unhealthy\",\n            service: \"rss-reader-app\",\n            uptime: 0,\n            lastActivity: new Date().toISOString(),\n            errorCount: 1,\n            dependencies: {\n                database: \"unknown\",\n                oauth: \"unknown\"\n            },\n            performance: {\n                avgSyncTime: 0,\n                avgDbQueryTime: 0,\n                avgApiCallTime: 0\n            },\n            error: error instanceof Error ? error.message : \"Health check failed\"\n        }, {\n            status: 503\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9oZWFsdGgvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3RDtBQUNPO0FBRS9ELDZDQUE2QztBQUN0QyxNQUFNRSxVQUFVLGdCQUFnQjtBQUVoQyxlQUFlQyxJQUFJQyxPQUFvQjtJQUM1QyxJQUFJO1FBQ0YsaUNBQWlDO1FBQ2pDLE1BQU1DLE1BQU0sSUFBSUMsSUFBSUYsUUFBUUMsR0FBRztRQUMvQixNQUFNRSxTQUFTRixJQUFJRyxZQUFZLENBQUNDLEdBQUcsQ0FBQyxZQUFZO1FBRWhELElBQUlGLFFBQVE7WUFDVixPQUFPUCxxREFBWUEsQ0FBQ1UsSUFBSSxDQUFDO2dCQUFFQyxRQUFRO2dCQUFNQyxXQUFXLElBQUlDO1lBQU87UUFDakU7UUFFQSxxQ0FBcUM7UUFDckMsTUFBTUMsU0FBUyxNQUFNYix3RUFBY0EsQ0FBQ2MsV0FBVztRQUUvQyw2Q0FBNkM7UUFDN0MsSUFBSUMsYUFBYTtRQUNqQixJQUFJRixPQUFPSCxNQUFNLEtBQUssYUFBYTtZQUNqQ0ssYUFBYSxLQUFLLHNCQUFzQjtRQUMxQyxPQUFPLElBQUlGLE9BQU9ILE1BQU0sS0FBSyxZQUFZO1lBQ3ZDSyxhQUFhLEtBQUssNERBQTREO1FBQ2hGO1FBRUEsT0FBT2hCLHFEQUFZQSxDQUFDVSxJQUFJLENBQUNJLFFBQVE7WUFBRUgsUUFBUUs7UUFBVztJQUN4RCxFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLGdDQUFnQ0E7UUFFOUMsZ0JBQWdCO1FBQ2hCLE1BQU0sRUFBRUUsY0FBYyxFQUFFLEdBQUcsTUFBTSx1S0FBTztRQUN4Q0EsZUFBZUMsUUFBUSxDQUFDLENBQUMsNkJBQTZCLEVBQUVILGlCQUFpQkksUUFBUUosTUFBTUssT0FBTyxHQUFHLGdCQUFnQixDQUFDO1FBRWxILE9BQU90QixxREFBWUEsQ0FBQ1UsSUFBSSxDQUN0QjtZQUNFQyxRQUFRO1lBQ1JZLFNBQVM7WUFDVEMsUUFBUTtZQUNSQyxjQUFjLElBQUlaLE9BQU9hLFdBQVc7WUFDcENDLFlBQVk7WUFDWkMsY0FBYztnQkFDWkMsVUFBVTtnQkFDVkMsT0FBTztZQUNUO1lBQ0FDLGFBQWE7Z0JBQ1hDLGFBQWE7Z0JBQ2JDLGdCQUFnQjtnQkFDaEJDLGdCQUFnQjtZQUNsQjtZQUNBakIsT0FBT0EsaUJBQWlCSSxRQUFRSixNQUFNSyxPQUFPLEdBQUc7UUFDbEQsR0FDQTtZQUFFWCxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3Jzcy1uZXdzLXJlYWRlci8uL3NyYy9hcHAvYXBpL2hlYWx0aC9yb3V0ZS50cz9mYzk5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBhcHBIZWFsdGhDaGVjayB9IGZyb20gJ0AvbGliL2hlYWx0aC9hcHAtaGVhbHRoLWNoZWNrJztcblxuLy8gRm9yY2UgZHluYW1pYyByZW5kZXJpbmcgZm9yIHRoaXMgQVBJIHJvdXRlXG5leHBvcnQgY29uc3QgZHluYW1pYyA9ICdmb3JjZS1keW5hbWljJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIC8vIENoZWNrIGlmIHRoaXMgaXMgYSBzaW1wbGUgcGluZ1xuICAgIGNvbnN0IHVybCA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xuICAgIGNvbnN0IGlzUGluZyA9IHVybC5zZWFyY2hQYXJhbXMuZ2V0KCdwaW5nJykgPT09ICd0cnVlJztcbiAgICBcbiAgICBpZiAoaXNQaW5nKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBzdGF0dXM6ICdvaycsIHRpbWVzdGFtcDogbmV3IERhdGUoKSB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gUGVyZm9ybSBjb21wcmVoZW5zaXZlIGhlYWx0aCBjaGVja1xuICAgIGNvbnN0IGhlYWx0aCA9IGF3YWl0IGFwcEhlYWx0aENoZWNrLmNoZWNrSGVhbHRoKCk7XG4gICAgXG4gICAgLy8gRGV0ZXJtaW5lIEhUVFAgc3RhdHVzIGNvZGUgYmFzZWQgb24gaGVhbHRoXG4gICAgbGV0IHN0YXR1c0NvZGUgPSAyMDA7XG4gICAgaWYgKGhlYWx0aC5zdGF0dXMgPT09ICd1bmhlYWx0aHknKSB7XG4gICAgICBzdGF0dXNDb2RlID0gNTAzOyAvLyBTZXJ2aWNlIFVuYXZhaWxhYmxlXG4gICAgfSBlbHNlIGlmIChoZWFsdGguc3RhdHVzID09PSAnZGVncmFkZWQnKSB7XG4gICAgICBzdGF0dXNDb2RlID0gMjAwOyAvLyBTdGlsbCByZXR1cm4gMjAwIGZvciBkZWdyYWRlZCwgYnV0IGluY2x1ZGUgc3RhdHVzIGluIGJvZHlcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKGhlYWx0aCwgeyBzdGF0dXM6IHN0YXR1c0NvZGUgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignSGVhbHRoIGNoZWNrIGVuZHBvaW50IGVycm9yOicsIGVycm9yKTtcbiAgICBcbiAgICAvLyBMb2cgdGhlIGVycm9yXG4gICAgY29uc3QgeyBBcHBIZWFsdGhDaGVjayB9ID0gYXdhaXQgaW1wb3J0KCdAL2xpYi9oZWFsdGgvYXBwLWhlYWx0aC1jaGVjaycpO1xuICAgIEFwcEhlYWx0aENoZWNrLmxvZ0Vycm9yKGBIZWFsdGggY2hlY2sgZW5kcG9pbnQgZXJyb3I6ICR7ZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcid9YCk7XG4gICAgXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAge1xuICAgICAgICBzdGF0dXM6ICd1bmhlYWx0aHknLFxuICAgICAgICBzZXJ2aWNlOiAncnNzLXJlYWRlci1hcHAnLFxuICAgICAgICB1cHRpbWU6IDAsXG4gICAgICAgIGxhc3RBY3Rpdml0eTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICBlcnJvckNvdW50OiAxLFxuICAgICAgICBkZXBlbmRlbmNpZXM6IHtcbiAgICAgICAgICBkYXRhYmFzZTogJ3Vua25vd24nLFxuICAgICAgICAgIG9hdXRoOiAndW5rbm93bicsXG4gICAgICAgIH0sXG4gICAgICAgIHBlcmZvcm1hbmNlOiB7XG4gICAgICAgICAgYXZnU3luY1RpbWU6IDAsXG4gICAgICAgICAgYXZnRGJRdWVyeVRpbWU6IDAsXG4gICAgICAgICAgYXZnQXBpQ2FsbFRpbWU6IDAsXG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdIZWFsdGggY2hlY2sgZmFpbGVkJyxcbiAgICAgIH0sXG4gICAgICB7IHN0YXR1czogNTAzIH1cbiAgICApO1xuICB9XG59Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImFwcEhlYWx0aENoZWNrIiwiZHluYW1pYyIsIkdFVCIsInJlcXVlc3QiLCJ1cmwiLCJVUkwiLCJpc1BpbmciLCJzZWFyY2hQYXJhbXMiLCJnZXQiLCJqc29uIiwic3RhdHVzIiwidGltZXN0YW1wIiwiRGF0ZSIsImhlYWx0aCIsImNoZWNrSGVhbHRoIiwic3RhdHVzQ29kZSIsImVycm9yIiwiY29uc29sZSIsIkFwcEhlYWx0aENoZWNrIiwibG9nRXJyb3IiLCJFcnJvciIsIm1lc3NhZ2UiLCJzZXJ2aWNlIiwidXB0aW1lIiwibGFzdEFjdGl2aXR5IiwidG9JU09TdHJpbmciLCJlcnJvckNvdW50IiwiZGVwZW5kZW5jaWVzIiwiZGF0YWJhc2UiLCJvYXV0aCIsInBlcmZvcm1hbmNlIiwiYXZnU3luY1RpbWUiLCJhdmdEYlF1ZXJ5VGltZSIsImF2Z0FwaUNhbGxUaW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/health/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/health/app-health-check.ts":
/*!********************************************!*\
  !*** ./src/lib/health/app-health-check.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppHealthCheck: () => (/* binding */ AppHealthCheck),\n/* harmony export */   appHealthCheck: () => (/* binding */ appHealthCheck)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n// Enhanced health check for the main Next.js application\n\n\n\n// Track service start time\nconst SERVICE_START_TIME = Date.now();\n// In-memory error tracking (last hour)\nconst errorLog = [];\n// Performance metrics tracking (last 100 operations)\nconst performanceMetrics = {\n    dbQueries: [],\n    apiCalls: [],\n    syncOperations: []\n};\nclass AppHealthCheck {\n    constructor(){\n        // Initialize Supabase client for health checks\n        this.supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(\"https://rgfxyraamghqnechkppg.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY);\n    }\n    static getInstance() {\n        if (!AppHealthCheck.instance) {\n            AppHealthCheck.instance = new AppHealthCheck();\n        }\n        return AppHealthCheck.instance;\n    }\n    async checkHealth() {\n        const services = [];\n        // Check database connectivity\n        const dbHealth = await this.checkDatabase();\n        services.push(dbHealth);\n        // Check OAuth token validity\n        const authHealth = await this.checkOAuthTokens();\n        services.push(authHealth);\n        // Calculate overall status\n        const overall = this.calculateOverallStatus(services);\n        // Get error count from last hour\n        const oneHourAgo = Date.now() - 60 * 60 * 1000;\n        const recentErrors = errorLog.filter((e)=>e.timestamp > oneHourAgo).length;\n        // Calculate uptime\n        const uptimeSeconds = Math.floor((Date.now() - SERVICE_START_TIME) / 1000);\n        // Calculate average performance metrics\n        const avgDbQueryTime = this.calculateAverage(performanceMetrics.dbQueries);\n        const avgApiCallTime = this.calculateAverage(performanceMetrics.apiCalls);\n        const avgSyncTime = this.calculateAverage(performanceMetrics.syncOperations);\n        // Write health check to JSONL log\n        await this.logHealthCheck({\n            timestamp: new Date().toISOString(),\n            service: \"rss-reader-app\",\n            status: overall,\n            uptime: uptimeSeconds,\n            errorCount: recentErrors,\n            performance: {\n                avgDbQueryTime,\n                avgApiCallTime,\n                avgSyncTime\n            }\n        });\n        return {\n            status: overall,\n            service: \"rss-reader-app\",\n            uptime: uptimeSeconds,\n            lastActivity: new Date().toISOString(),\n            errorCount: recentErrors,\n            dependencies: {\n                database: dbHealth.status,\n                oauth: authHealth.status\n            },\n            performance: {\n                avgDbQueryTime,\n                avgApiCallTime,\n                avgSyncTime\n            },\n            details: {\n                services\n            }\n        };\n    }\n    async checkDatabase() {\n        const checks = [];\n        try {\n            const start = Date.now();\n            // Test basic connectivity with a simple query\n            const { data, error } = await this.supabase.from(\"system_config\").select(\"key\").limit(1).single();\n            const duration = Date.now() - start;\n            // Track performance\n            this.trackPerformance(\"dbQueries\", duration);\n            if (error) {\n                checks.push({\n                    name: \"connectivity\",\n                    status: \"unhealthy\",\n                    message: \"Database connection failed\",\n                    duration,\n                    error: error.message\n                });\n            } else {\n                checks.push({\n                    name: \"connectivity\",\n                    status: \"healthy\",\n                    message: \"Database connection successful\",\n                    duration\n                });\n                // Check database performance\n                // Threshold: 300ms for degraded, 1000ms for unhealthy\n                if (duration > 1000) {\n                    checks.push({\n                        name: \"performance\",\n                        status: \"unhealthy\",\n                        message: `Database response very slow: ${duration}ms`,\n                        duration\n                    });\n                } else if (duration > 300) {\n                    checks.push({\n                        name: \"performance\",\n                        status: \"degraded\",\n                        message: `Database response slow: ${duration}ms`,\n                        duration\n                    });\n                } else {\n                    checks.push({\n                        name: \"performance\",\n                        status: \"healthy\",\n                        message: `Database response time: ${duration}ms`,\n                        duration\n                    });\n                }\n            }\n        } catch (error) {\n            checks.push({\n                name: \"connectivity\",\n                status: \"unhealthy\",\n                message: \"Database check failed\",\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            });\n        }\n        const status = this.calculateServiceStatus(checks);\n        return {\n            name: \"database\",\n            displayName: \"Supabase Database\",\n            status,\n            lastCheck: new Date(),\n            message: this.getServiceMessage(\"database\", status),\n            checks\n        };\n    }\n    async checkOAuthTokens() {\n        const checks = [];\n        try {\n            // Check if token file exists\n            const tokenPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.env.HOME || \"/Users/shayon\", \".rss-reader\", \"tokens.json\");\n            const exists = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().access(tokenPath).then(()=>true).catch(()=>false);\n            if (!exists) {\n                checks.push({\n                    name: \"token-file\",\n                    status: \"unhealthy\",\n                    message: \"OAuth token file not found\"\n                });\n            } else {\n                // Read and check token validity\n                const tokenData = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(tokenPath, \"utf-8\");\n                const tokens = JSON.parse(tokenData);\n                if (!tokens.encrypted) {\n                    checks.push({\n                        name: \"token-file\",\n                        status: \"unhealthy\",\n                        message: \"OAuth tokens not properly encrypted\"\n                    });\n                } else {\n                    // Check token existence (we can't decrypt to check expiry without the key)\n                    // Tokens typically last 1 year from creation\n                    const fileStats = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().stat(tokenPath);\n                    const tokenAge = Date.now() - fileStats.mtime.getTime();\n                    const daysOld = Math.floor(tokenAge / (1000 * 60 * 60 * 24));\n                    // Assume tokens expire after 365 days\n                    const daysRemaining = Math.max(0, 365 - daysOld);\n                    if (daysRemaining < 30) {\n                        checks.push({\n                            name: \"token-validity\",\n                            status: \"degraded\",\n                            message: `OAuth tokens may be expiring soon (approx ${daysRemaining} days left)`\n                        });\n                    } else {\n                        checks.push({\n                            name: \"token-validity\",\n                            status: \"healthy\",\n                            message: `OAuth tokens valid (approx ${daysRemaining} days remaining)`\n                        });\n                    }\n                }\n            }\n        } catch (error) {\n            checks.push({\n                name: \"oauth\",\n                status: \"unhealthy\",\n                message: \"OAuth check failed\",\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            });\n        }\n        const status = this.calculateServiceStatus(checks);\n        return {\n            name: \"oauth\",\n            displayName: \"OAuth Authentication\",\n            status,\n            lastCheck: new Date(),\n            message: this.getServiceMessage(\"oauth\", status),\n            checks\n        };\n    }\n    calculateOverallStatus(services) {\n        const statuses = services.map((s)=>s.status);\n        if (statuses.includes(\"unhealthy\")) {\n            return \"unhealthy\";\n        } else if (statuses.includes(\"degraded\")) {\n            return \"degraded\";\n        }\n        return \"healthy\";\n    }\n    calculateServiceStatus(checks) {\n        const statuses = checks.map((c)=>c.status);\n        if (statuses.includes(\"unhealthy\")) {\n            return \"unhealthy\";\n        } else if (statuses.includes(\"degraded\")) {\n            return \"degraded\";\n        }\n        return \"healthy\";\n    }\n    getServiceMessage(service, status) {\n        const messages = {\n            healthy: `${service} is operating normally`,\n            degraded: `${service} is experiencing minor issues`,\n            unhealthy: `${service} is experiencing major issues`,\n            unknown: `${service} status cannot be determined`\n        };\n        return messages[status];\n    }\n    trackPerformance(metric, duration) {\n        const metrics = performanceMetrics[metric];\n        metrics.push(duration);\n        // Keep only last 100 measurements\n        if (metrics.length > 100) {\n            metrics.shift();\n        }\n    }\n    calculateAverage(values) {\n        if (values.length === 0) return 0;\n        const sum = values.reduce((a, b)=>a + b, 0);\n        return Math.round(sum / values.length);\n    }\n    async logHealthCheck(data) {\n        try {\n            const logPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"logs\", \"health-checks.jsonl\");\n            await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().mkdir(path__WEBPACK_IMPORTED_MODULE_1___default().dirname(logPath), {\n                recursive: true\n            });\n            await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().appendFile(logPath, JSON.stringify(data) + \"\\n\");\n        } catch (error) {\n            console.error(\"Failed to log health check:\", error);\n        }\n    }\n    // Public method to log errors (called from other parts of the app)\n    static logError(error) {\n        errorLog.push({\n            timestamp: Date.now(),\n            error\n        });\n        // Keep only last hour of errors\n        const oneHourAgo = Date.now() - 60 * 60 * 1000;\n        while(errorLog.length > 0 && errorLog[0].timestamp < oneHourAgo){\n            errorLog.shift();\n        }\n    }\n    // Public method to track performance (called from other parts of the app)\n    static trackMetric(type, duration) {\n        const instance = AppHealthCheck.getInstance();\n        instance.trackPerformance(type, duration);\n    }\n}\nconst appHealthCheck = AppHealthCheck.getInstance();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/health/app-health-check.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@supabase","vendor-chunks/next","vendor-chunks/ws","vendor-chunks/isows"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fhealth%2Fapp%2Froute&page=%2Fapi%2Fhealth%2Fapp%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fhealth%2Fapp%2Froute.ts&appDir=%2FUsers%2Fshayon%2FDevProjects%2Frss-news-reader%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshayon%2FDevProjects%2Frss-news-reader&isDev=true&tsconfigPath=tsconfig.json&basePath=%2Freader&assetPrefix=%2Freader&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();